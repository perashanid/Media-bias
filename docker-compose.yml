version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: media-bias-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE:-media_bias_detector}
    ports:
      - "${MONGODB_PORT:-27017}:27017"
    volumes:
      - mongodb_data:/data/db
      - ./config/mongodb-init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - media-bias-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: media-bias-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - media-bias-network

  # Main Application
  app:
    build: .
    container_name: media-bias-app
    restart: unless-stopped
    environment:
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=${MONGODB_DATABASE:-media_bias_detector}
      - MONGODB_USERNAME=${MONGODB_USERNAME:-admin}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD:-password}
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - FLASK_PORT=5000
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "${FLASK_PORT:-5000}:5000"
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config:/app/config
    depends_on:
      - mongodb
      - redis
    networks:
      - media-bias-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: media-bias-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - media-bias-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  media-bias-network:
    driver: bridge